# Run nginx as non-root user
user nginx;
worker_processes auto;

# PID file location that nginx user can write to
pid /tmp/nginx.pid;

# Error log location
error_log /var/log/nginx/error.log warn;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
    text/plain
    text/css
    text/xml
    text/javascript
    application/javascript
    application/xml+rss
    application/json
    application/font-woff
    application/font-woff2
    font/woff
    font/woff2;

    # Temporary file paths that nginx user can write to
    client_body_temp_path /tmp/nginx/client_body_temp;
    proxy_temp_path /tmp/nginx/proxy_temp;
    fastcgi_temp_path /tmp/nginx/fastcgi_temp;
    uwsgi_temp_path /tmp/nginx/uwsgi_temp;
    scgi_temp_path /tmp/nginx/scgi_temp;

    server {
        listen 80;
        server_name localhost;
        root /var/www/public;
        index index.php index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Handle built frontend assets from build/assets directory
        location ^~ /build/assets/ {
            root /var/www/public;

            # Long-term caching for versioned assets
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Served-By "build-assets" always;

            # Handle CSS files
            location ~* \.css$ {
                add_header Content-Type "text/css";
                add_header Access-Control-Allow-Origin "*";
                try_files $uri =404;
            }

            # Handle JS files
            location ~* \.js$ {
                add_header Content-Type "application/javascript";
                add_header Access-Control-Allow-Origin "*";
                try_files $uri =404;
            }

            # Handle font files
            location ~* \.(woff|woff2|ttf|eot|otf)$ {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, OPTIONS";
                add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
                try_files $uri =404;
            }

            # Handle image files
            location ~* \.(png|jpg|jpeg|gif|ico|svg|webp)$ {
                add_header Access-Control-Allow-Origin "*";
                try_files $uri =404;
            }

            # Fallback for any other files in build/assets
            try_files $uri =404;
        }

        # Handle other files in build directory (not in assets subdirectory)
        location ^~ /build/ {
            root /var/www/public;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Served-By "build-root" always;
            try_files $uri =404;
        }

        # Handle Livewire specifically
        location ^~ /livewire/ {
            try_files $uri $uri/ /index.php?$query_string;
        }

        # Handle other static assets in public root
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp)$ {
            # Only serve if not already handled by build/ locations
            expires 30d;
            add_header Cache-Control "public";
            add_header X-Served-By "public-static" always;
            try_files $uri =404;
        }

        # Main location block for Laravel routes
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        # PHP processing
        location ~ \.php$ {
            fastcgi_pass php-fpm:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;

            # Additional FastCGI parameters
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
            fastcgi_read_timeout 300;
            fastcgi_send_timeout 300;
            fastcgi_buffer_size 64k;
            fastcgi_buffers 4 64k;
            fastcgi_busy_buffers_size 128k;
        }

        # Deny access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Deny access to Laravel specific files
        location ~ /(?:\.env|\.git|composer\.(json|lock)|package\.json|yarn\.lock|webpack\.mix\.js|artisan) {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}
